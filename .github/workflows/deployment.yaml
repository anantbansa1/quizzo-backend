name: Backend deploy to EKS

on:
  push:
    branches: [main]

jobs:
  Publish-image-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS Credentials and Assume Role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.EKS_CLUSTER_REGION }}
          role-to-assume: arn:aws:iam::767397776316:role/GitHubAction-AssumeRoleWithAction
          role-duration-seconds: 3600

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install boto3

      - name: Create .env
        env:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region_name: ${{ secrets.EKS_CLUSTER_REGION }}
          aws_secret_name: ${{ secrets.AWS_SECRET_NAME }}
        run: |
          python .github/scripts/add_env_vars.py

      - name: Add token.json
        env:
          TOKEN_JSON: ${{ secrets.TOKEN_JSON }}
        run: |
          echo "$TOKEN_JSON" > token.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image
        id: build-docker-image
        uses: docker/build-push-action@v2
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.REPOSITORY }}:${{ github.sha }}

      - name: Store build timestamp
        run: echo "BUILD_TIME=$(date -Iseconds)" >> $GITHUB_ENV

      - name: Setup kubectl
        id: install-kubectl
        uses: azure/setup-kubectl@v3

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.EKS_CLUSTER_REGION }}

      - name: Install helm
        uses: Azure/setup-helm@v3
        with:
          version: latest

      - name: Show current context
        run: kubectl config current-context

      - name: Deploy helm chart to EKS
        env:
          NAMESPACE: dev
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          helm template --set image.tag=$IMAGE_TAG --set image.repository=$REGISTRY/$REPOSITORY --set podAnnotations.deploymentTime=$BUILD_TIME ./backend-deploy
          helm upgrade --install --set image.tag=$IMAGE_TAG --set image.repository=$REGISTRY/$REPOSITORY --set podAnnotations.deploymentTime=$BUILD_TIME monolith ./backend-deploy -n $NAMESPACE
